#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

# Ignore CoffeeScript files
compile '/coffee/*/' do
  # nothing
end

route '/coffee/*/' do
  # nothing
end

compile '/stylesheets/*/' do
  # don’t filter or layout
end

route '/stylesheets/*/' do
  this_dir = ((item.identifier.chop).rpartition "/")[0]
  this_f = (item[:filename].rpartition "/")[2]
  this_dir + "/" + this_f
end

compile '/javascripts/*/' do
  # nothing
end

route '/javascripts/*/' do
  this_dir = ((item.identifier.chop).rpartition "/")[0]
  this_f = (item[:filename].rpartition "/")[2]
  this_dir + "/" + this_f
end

compile '/posts/*' do
  if item.binary?
    # don’t filter binary items
  elsif item[:override] == true
    # borrowed from nanoc-site Rules
    filter :erb if item[:is_dynamic]

    case item[:markdown]
    when 'advanced'
      filter :kramdown, :auto_ids => false
    when 'basic'
      filter :rdiscount
    end
    filter :relativize_paths, :type => :html
    filter :colorize_syntax
    layout 'post'
  else
    # use the full config by default
    filter :erb
    filter :kramdown, :auto_ids => false
    filter :colorize_syntax
    filter :relativize_paths, :type => :html
    layout 'post'
  end
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  elsif item[:override] == true
    # borrowed from nanoc-site Rules
    filter :erb if item[:is_dynamic]

    case item[:markdown]
    when 'advanced'
      filter :kramdown, :auto_ids => false
    when 'basic'
      filter :rdiscount
    end
    filter :relativize_paths, :type => :html
    filter :colorize_syntax
    layout 'default'
  else
    # use the full config by default
    filter :erb
    filter :kramdown, :auto_ids => false
    filter :colorize_syntax
    filter :relativize_paths, :type => :html
    layout 'default'
  end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
